{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tan Tai\\\\Desktop\\\\Do An CN\\\\website-movie\\\\src\\\\components\\\\movie-grid\\\\MovieGrid.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './movie-grid.scss';\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input';\nimport tmdbApi, { category, movieType, tvType } from '../../Api/tmdbApi';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieGrid = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalpage] = useState(0);\n  const {\n    keyword\n  } = useParams();\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n\n      if (keyword === undefined) {\n        const params = {};\n\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(movieType.upcoming, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(tvType.popular, {\n              params\n            });\n        }\n      } else {\n        const params = {\n          query: keyword\n        };\n        response = await tmdbApi.search(props.category, {\n          params\n        });\n      }\n\n      setItems(response.results);\n      setTotalpage(response.total_pages);\n    };\n\n    getList();\n  }, [props.category, keyword]);\n\n  const loadMore = async () => {\n    let response = null;\n\n    if (keyword === undefined) {\n      const params = {\n        page: page + 1\n      };\n\n      switch (props.category) {\n        case category.movie:\n          response = await tmdbApi.getMoviesList(movieType.upcoming, {\n            params\n          });\n          break;\n\n        default:\n          response = await tmdbApi.getTvList(tvType.popular, {\n            params\n          });\n      }\n    } else {\n      const params = {\n        page: page + 1,\n        query: keyword\n      };\n      response = await tmdbApi.search(props.category, {\n        params\n      });\n    }\n\n    setItems([...items, ...response.results]);\n    setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section mb-3\",\n      children: /*#__PURE__*/_jsxDEV(MovieSearch, {\n        category: props.category,\n        keyword: keyword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        category: props.category,\n        item: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), page < totalPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid__loadmore\",\n      children: /*#__PURE__*/_jsxDEV(OutlineButton, {\n        className: \"small\",\n        onClick: loadMore,\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MovieGrid, \"YWZLe7IaG4CUGuGMn4GCVU2UHDA=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieGrid;\n\nconst MovieSearch = props => {\n  _s2();\n\n  const history = useHistory();\n  const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n  const goToSearch = useCallback(() => {\n    if (keyword.trim().length > 0) {\n      history.push(`/${category[props.category]}/search/${keyword}`);\n    }\n  }, [keyword, props.category, history]);\n  useEffect(() => {\n    const enterEvent = e => {\n      e.preventDefault();\n\n      if (e.keyCode === 13) {\n        goToSearch();\n      }\n    };\n\n    document.addEventListener('keyup', enterEvent);\n    return () => {\n      document.removeEventListener('keyup', enterEvent);\n    };\n  }, [keyword, goToSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-search\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter keyword\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"small\",\n      onClick: goToSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MovieSearch, \"/3wmwjCSNV7mdVEG/JD5Au5tnjQ=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = MovieSearch;\nexport default MovieGrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieGrid\");\n$RefreshReg$(_c2, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","MovieCard","Button","OutlineButton","Input","tmdbApi","category","movieType","tvType","useCallback","MovieGrid","props","items","setItems","page","setPage","totalPage","setTotalpage","keyword","getList","response","undefined","params","movie","getMoviesList","upcoming","getTvList","popular","query","search","results","total_pages","loadMore","map","item","i","MovieSearch","history","setKeyword","goToSearch","trim","length","push","enterEvent","e","preventDefault","keyCode","document","addEventListener","removeEventListener","target","value"],"sources":["C:/Users/Tan Tai/Desktop/Do An CN/website-movie/src/components/movie-grid/MovieGrid.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport './movie-grid.scss'\r\nimport MovieCard from '../movie-card/MovieCard'\r\nimport Button, {OutlineButton} from '../button/Button';\r\nimport Input from '../input/Input'\r\n\r\nimport tmdbApi, { category, movieType, tvType } from '../../Api/tmdbApi';\r\nimport { useCallback } from 'react';\r\nconst MovieGrid = props  => {\r\n\r\n  const[items, setItems] = useState([]);\r\n\r\n  const[page, setPage] = useState(1);\r\n  const[totalPage, setTotalpage] = useState(0);\r\n\r\n  const{keyword} = useParams();\r\n\r\n  useEffect(() => {\r\n    const getList = async() => {\r\n      let response = null;\r\n      if(keyword===undefined){\r\n        const params ={};\r\n        switch(props.category){\r\n            case category.movie:\r\n              response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n              break;\r\n            default:\r\n              response = await tmdbApi.getTvList(tvType.popular, {params});\r\n        }\r\n      }else{\r\n        const params = {\r\n          query: keyword\r\n        }\r\n        response = await tmdbApi.search(props.category, {params});\r\n      }\r\n      setItems(response.results);\r\n      setTotalpage(response.total_pages);\r\n    }\r\n    getList();\r\n  }, [props.category, keyword]);\r\n\r\n  const loadMore = async () => {\r\n    let response = null;\r\n    if (keyword === undefined) {\r\n        const params = {\r\n            page: page + 1\r\n        };\r\n        switch(props.category) {\r\n            case category.movie:\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                break;\r\n            default:\r\n                response = await tmdbApi.getTvList(tvType.popular, {params});\r\n        }\r\n    } else {\r\n        const params = {\r\n            page: page + 1,\r\n            query: keyword\r\n        }\r\n        response = await tmdbApi.search(props.category, {params});\r\n    }\r\n    setItems([...items, ...response.results]);\r\n    setPage(page + 1);\r\n}\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"section mb-3\">\r\n        <MovieSearch category={props.category} keyword={keyword}/>\r\n      </div>\r\n      <div className=\"movie-grid\">\r\n        \r\n        {\r\n          items.map((item, i)=> <MovieCard category={props.category} item={item} key={i}/>)\r\n        }\r\n      </div>\r\n      {\r\n        page < totalPage ? (\r\n          <div className=\"movie-grid__loadmore\">\r\n              <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n          </div>\r\n          ): null\r\n        }\r\n    </>\r\n  );\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n  const history = useHistory()\r\n  const [keyword, setKeyword] = useState(props.keyword ? props.keyword: '');\r\n  const goToSearch = useCallback(\r\n    () => {\r\n      if (keyword.trim().length > 0){\r\n        history.push(`/${category[props.category]}/search/${keyword}`);\r\n      }\r\n    },\r\n    [keyword, props.category, history]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const enterEvent = (e) =>{\r\n      e.preventDefault();\r\n      if ( e.keyCode === 13){\r\n        goToSearch();\r\n      }\r\n    }\r\n    document.addEventListener('keyup', enterEvent);\r\n    return()=>{\r\n      document.removeEventListener('keyup', enterEvent);\r\n    };\r\n  }, [keyword, goToSearch]);\r\n  \r\n  return(\r\n    <div className=\"movie-search\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter keyword\"\r\n        value={keyword}\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      />\r\n      <Button className=\"small\" onClick={goToSearch}>Search</Button>\r\n    </div>\r\n  )\r\n}\r\nexport default MovieGrid"],"mappings":"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"},"metadata":{},"sourceType":"module"}