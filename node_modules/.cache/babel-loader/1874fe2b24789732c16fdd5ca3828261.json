{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tan Tai\\\\Desktop\\\\Do An CN\\\\website-movie\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport Button from '../button/Button';\nimport tmdbApi, { category } from '../../Api/tmdbApi';\nimport apiConfig from '../../Api/apiConfig';\nimport { useLayoutEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grapCursor: true,\n      spaceBetween: 10,\n      slidesPerview: 'auto',\n      children: items.map((items, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(items.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","useLayoutEffect","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","similar","id","results","map","i","w500Image","poster_path","propTypes","string","isRequired"],"sources":["C:/Users/Tan Tai/Desktop/Do An CN/website-movie/src/components/movie-list/MovieList.jsx"],"sourcesContent":["import React, {useState, useEffect}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './movie-list.scss';\r\n\r\nimport {SwiperSlide, Swiper} from 'swiper/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\n\r\nimport tmdbApi, { category } from '../../Api/tmdbApi';\r\nimport apiConfig from '../../Api/apiConfig';\r\nimport { useLayoutEffect } from 'react';\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() =>{\r\n        const getList = async()=>{\r\n            let response = null;\r\n            const params ={};\r\n            \r\n            if (props.type !== 'similar')\r\n            {\r\n                switch(props.category){\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getList(props.type, {params});\r\n                    }\r\n                } else{\r\n                    response = await tmdbApi.similar(props.category, props.id);\r\n                }\r\n                setItems(response.results);\r\n            }\r\n            getList();\r\n    }, []);\r\n  return (\r\n    <div className='movie-list'>\r\n        <Swiper\r\n            grapCursor={true}\r\n            spaceBetween ={10}\r\n            slidesPerview={'auto'}>\r\n            {\r\n                items.map((items, i) =>(\r\n                    <SwiperSlide key={i}>\r\n                        <img src={apiConfig.w500Image(items.poster_path)} alt=\"\" />\r\n                    </SwiperSlide>\r\n                ))\r\n            }\r\n        </Swiper>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,mBAAP;AAEA,SAAQC,WAAR,EAAqBC,MAArB,QAAkC,cAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,OAAP,IAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,eAAT,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAA;;EAEvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAK;IACX,MAAMc,OAAO,GAAG,YAAS;MACrB,IAAIC,QAAQ,GAAG,IAAf;MACA,MAAMC,MAAM,GAAE,EAAd;;MAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,SAAnB,EACA;QACI,QAAON,KAAK,CAACJ,QAAb;UACI,KAAKA,QAAQ,CAACW,KAAd;YACIH,QAAQ,GAAG,MAAMT,OAAO,CAACa,aAAR,CAAsBR,KAAK,CAACM,IAA5B,EAAkC;cAACD;YAAD,CAAlC,CAAjB;YACA;;UACJ;YACID,QAAQ,GAAG,MAAMT,OAAO,CAACQ,OAAR,CAAgBH,KAAK,CAACM,IAAtB,EAA4B;cAACD;YAAD,CAA5B,CAAjB;QALR;MAOC,CATL,MASU;QACFD,QAAQ,GAAG,MAAMT,OAAO,CAACc,OAAR,CAAgBT,KAAK,CAACJ,QAAtB,EAAgCI,KAAK,CAACU,EAAtC,CAAjB;MACH;;MACDR,QAAQ,CAACE,QAAQ,CAACO,OAAV,CAAR;IACH,CAjBL;;IAkBIR,OAAO;EACd,CApBQ,EAoBN,EApBM,CAAT;EAqBF,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACI,QAAC,MAAD;MACI,UAAU,EAAE,IADhB;MAEI,YAAY,EAAG,EAFnB;MAGI,aAAa,EAAE,MAHnB;MAAA,UAKQF,KAAK,CAACW,GAAN,CAAU,CAACX,KAAD,EAAQY,CAAR,kBACN,QAAC,WAAD;QAAA,uBACI;UAAK,GAAG,EAAEhB,SAAS,CAACiB,SAAV,CAAoBb,KAAK,CAACc,WAA1B,CAAV;UAAkD,GAAG,EAAC;QAAtD;UAAA;UAAA;UAAA;QAAA;MADJ,GAAkBF,CAAlB;QAAA;QAAA;QAAA;MAAA,QADJ;IALR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1CD;;GAAMd,S;;KAAAA,S;AA4CNA,SAAS,CAACiB,SAAV,GAAsB;EAClBpB,QAAQ,EAAEN,SAAS,CAAC2B,MAAV,CAAiBC,UADT;EAElBZ,IAAI,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBC;AAFL,CAAtB;AAKA,eAAenB,SAAf"},"metadata":{},"sourceType":"module"}