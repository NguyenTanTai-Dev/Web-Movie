{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tan Tai\\\\Desktop\\\\Do An CN\\\\website-movie\\\\src\\\\components\\\\movie-grid\\\\MovieGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './movie-grid.scss';\nimport MovieCard from '../movie-card/MovieCard';\nimport { useParams } from 'react-router-dom';\nimport tmdbApi, { category, movieType, tvType } from '../../Api/tmdbApi';\nimport Button from '../button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MovieGrid = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalpage] = useState(0);\n  const {\n    keyword\n  } = useParams();\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n\n      if (keyword === undefined) {\n        const params = {};\n\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(movieType.upcoming, {\n              params\n            });\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(tvType.popular, {\n              params\n            });\n        }\n      } else {\n        const params = {\n          query: keyword\n        };\n        response = await tmdbApi.search(props.category, {\n          params\n        });\n      }\n\n      setItems(response.results);\n      setTotalpage(response.total_pages);\n    };\n\n    getList();\n  }, [props.category, keyword]);\n\n  const loadMore = () => {\n    console.log('loadmore');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        category: props.category,\n        item: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), page < totalPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid__loadmore\",\n      children: /*#__PURE__*/_jsxDEV(OutlineButton, {\n        className: \"small\",\n        onClick: loadMore,\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MovieGrid, \"YWZLe7IaG4CUGuGMn4GCVU2UHDA=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieGrid;\nexport default MovieGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","useParams","tmdbApi","category","movieType","tvType","Button","MovieGrid","props","items","setItems","page","setPage","totalPage","setTotalpage","keyword","getList","response","undefined","params","movie","getMoviesList","upcoming","getTvList","popular","query","search","results","total_pages","loadMore","console","log","map","item","i"],"sources":["C:/Users/Tan Tai/Desktop/Do An CN/website-movie/src/components/movie-grid/MovieGrid.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport './movie-grid.scss'\r\nimport MovieCard from '../movie-card/MovieCard'\r\nimport { useParams } from 'react-router-dom';\r\nimport tmdbApi, { category, movieType, tvType } from '../../Api/tmdbApi';\r\n\r\nimport Button from '../button/Button';\r\n\r\n\r\nconst MovieGrid = props  => {\r\n\r\n  const[items, setItems] = useState([]);\r\n\r\n  const[page, setPage] = useState(1);\r\n  const[totalPage, setTotalpage] = useState(0);\r\n\r\n  const{keyword} = useParams();\r\n\r\n  useEffect(() => {\r\n    const getList = async() => {\r\n      let response = null;\r\n      if(keyword===undefined){\r\n        const params ={};\r\n        switch(props.category){\r\n            case category.movie:\r\n              response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n              break;\r\n            default:\r\n              response = await tmdbApi.getTvList(tvType.popular, {params});\r\n        }\r\n      }else{\r\n        const params = {\r\n          query: keyword\r\n        }\r\n        response = await tmdbApi.search(props.category, {params});\r\n      }\r\n      setItems(response.results);\r\n      setTotalpage(response.total_pages);\r\n    }\r\n    getList();\r\n  }, [props.category, keyword]);\r\n\r\n  const loadMore = () =>{\r\n    console.log('loadmore');\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"movie-grid\">\r\n        \r\n        {\r\n          items.map((item, i)=> <MovieCard category={props.category} item={item} key={i}/>)\r\n        }\r\n      </div>\r\n      {\r\n        page < totalPage ? (\r\n          <div className=\"movie-grid__loadmore\">\r\n              <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n          </div>\r\n          ): null\r\n        }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieGrid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,mBAArD;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAGA,MAAMC,SAAS,GAAGC,KAAK,IAAK;EAAA;;EAE1B,MAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAjC;EAEA,MAAK,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAA/B;EACA,MAAK,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAAzC;EAEA,MAAK;IAACiB;EAAD,IAAYd,SAAS,EAA1B;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMiB,OAAO,GAAG,YAAW;MACzB,IAAIC,QAAQ,GAAG,IAAf;;MACA,IAAGF,OAAO,KAAGG,SAAb,EAAuB;QACrB,MAAMC,MAAM,GAAE,EAAd;;QACA,QAAOX,KAAK,CAACL,QAAb;UACI,KAAKA,QAAQ,CAACiB,KAAd;YACEH,QAAQ,GAAG,MAAMf,OAAO,CAACmB,aAAR,CAAsBjB,SAAS,CAACkB,QAAhC,EAA0C;cAACH;YAAD,CAA1C,CAAjB;YACA;;UACF;YACEF,QAAQ,GAAG,MAAMf,OAAO,CAACqB,SAAR,CAAkBlB,MAAM,CAACmB,OAAzB,EAAkC;cAACL;YAAD,CAAlC,CAAjB;QALN;MAOD,CATD,MASK;QACH,MAAMA,MAAM,GAAG;UACbM,KAAK,EAAEV;QADM,CAAf;QAGAE,QAAQ,GAAG,MAAMf,OAAO,CAACwB,MAAR,CAAelB,KAAK,CAACL,QAArB,EAA+B;UAACgB;QAAD,CAA/B,CAAjB;MACD;;MACDT,QAAQ,CAACO,QAAQ,CAACU,OAAV,CAAR;MACAb,YAAY,CAACG,QAAQ,CAACW,WAAV,CAAZ;IACD,CAnBD;;IAoBAZ,OAAO;EACR,CAtBQ,EAsBN,CAACR,KAAK,CAACL,QAAP,EAAiBY,OAAjB,CAtBM,CAAT;;EAwBA,MAAMc,QAAQ,GAAG,MAAK;IACpBC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,UAGItB,KAAK,CAACuB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBAAY,QAAC,SAAD;QAAW,QAAQ,EAAE1B,KAAK,CAACL,QAA3B;QAAqC,IAAI,EAAE8B;MAA3C,GAAsDC,CAAtD;QAAA;QAAA;QAAA;MAAA,QAAtB;IAHJ;MAAA;MAAA;MAAA;IAAA,QADF,EAQIvB,IAAI,GAAGE,SAAP,gBACE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI,QAAC,aAAD;QAAe,SAAS,EAAC,OAAzB;QAAiC,OAAO,EAAEgB,QAA1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADF,GAIK,IAZT;EAAA,gBADF;AAiBD,CAtDD;;GAAMtB,S;UAOaN,S;;;KAPbM,S;AAwDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}