{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tan Tai\\\\Desktop\\\\Do An CN\\\\website-movie\\\\src\\\\components\\\\hero-slide\\\\HeroSlide.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport SwiperCore, { Autoplay } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\nimport tmdbApi, { category, movieType } from \"../../Api/tmdbApi\";\nimport apiConfig from \"../../Api/apiConfig\";\nimport \"./hero-slide.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroSlide = () => {\n  _s();\n\n  SwiperCore.use([Autoplay]);\n  const [movieItems, setMovieItems] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovieItems(response.results.slice(1, 4));\n        console.log(response);\n      } catch {\n        console.log(\"error\");\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1,\n      children: movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n            item: item,\n            className: `${isActive ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), movieItems.map((item, i) => /*#__PURE__*/_jsxDEV(TrailerModal, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeroSlide, \"v2ja/IALY/F/8AFwp1LDsPz/EqM=\");\n\n_c = HeroSlide;\n\nconst HeroSlideItem = props => {\n  _s2();\n\n  let hisrory = useHistory();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n  const setModalActive = async () => {\n    const modal = document.querySelector(`#modal_${item.id}`);\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n    if (videos.results.length > 0) {\n      const videoSrc = 'http://www.youtube.com/embed/' + videos.results[0].key;\n      modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\n    } else {\n      modal.querySelector('.modal__content').innerHTML = 'No Trailer';\n    }\n\n    modal.classList.toggle('active');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hero-slide__item ${props.className}`,\n    style: {\n      backgroundImage: `url(${background})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-slide__item__content container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview\",\n          children: item.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => hisrory.push('/movie/' + item.id),\n            children: \"Watch Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(OutlineButton, {\n            onClick: setModalActive,\n            children: \"Watch Trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-slide__item__content__poster\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: apiConfig.w500Image(item.poster_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(HeroSlideItem, \"JdRvKuhMmRWQtVv8IgVX1b80ssM=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = HeroSlideItem;\n\nconst TrailerModal = props => {\n  _s3();\n\n  const item = props.item;\n  const iframeRef = useRef(null);\n\n  const onClose = () => iframeRef.current.setAttribute('src', '');\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: iframeRef,\n        width: \"100&\",\n        height: \"500px\",\n        title: \"trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(TrailerModal, \"HIHwOEFe13FUYgDPZ3BBEH738M4=\");\n\n_c3 = TrailerModal;\nexport default HeroSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useHistory","SwiperCore","Autoplay","Swiper","SwiperSlide","Button","OutlineButton","Modal","ModalContent","tmdbApi","category","movieType","apiConfig","HeroSlide","use","movieItems","setMovieItems","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","map","item","i","isActive","HeroSlideItem","props","hisrory","background","originalImage","backdrop_path","poster_path","setModalActive","modal","document","querySelector","id","videos","getVideos","movie","length","videoSrc","key","setAttribute","innerHTML","classList","toggle","className","backgroundImage","title","overview","push","w500Image","TrailerModal","iframeRef","onClose","current"],"sources":["C:/Users/Tan Tai/Desktop/Do An CN/website-movie/src/components/hero-slide/HeroSlide.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport SwiperCore, { Autoplay } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport Button, {OutlineButton} from '../button/Button';\r\nimport Modal, {ModalContent} from '../modal/Modal';\r\n\r\nimport tmdbApi, { category, movieType } from \"../../Api/tmdbApi\";\r\nimport apiConfig from \"../../Api/apiConfig\";\r\n\r\nimport \"./hero-slide.scss\";\r\n\r\nconst HeroSlide = () => {\r\n  SwiperCore.use([Autoplay]);\r\n\r\n  const [movieItems, setMovieItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      const params = { page: 1 };\r\n      try {\r\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\r\n          params,\r\n        });\r\n        setMovieItems(response.results.slice(1, 4));\r\n        console.log(response);\r\n      } catch {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"hero-slide\">\r\n      <Swiper\r\n        modules={[Autoplay]}\r\n        grabCursor={true}\r\n        spaceBetween={0}\r\n        slidesPerView={1}\r\n      >\r\n        {movieItems.map((item, i) => (\r\n          <SwiperSlide key={i}>\r\n            {({ isActive }) => (\r\n              <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n            )}\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n      {\r\n        movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\nconst HeroSlideItem = (props) => {\r\n  let hisrory = useHistory();\r\n\r\n  const item = props.item;\r\n\r\n  const background = apiConfig.originalImage(\r\n    item.backdrop_path ? item.backdrop_path : item.poster_path\r\n  );\r\n\r\n  const setModalActive = async () => {\r\n    const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n    const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n    if (videos.results.length > 0)\r\n    {\r\n        const videoSrc = 'http://www.youtube.com/embed/' + videos.results[0].key;\r\n\r\n        modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\r\n    }else{\r\n        modal.querySelector('.modal__content').innerHTML = 'No Trailer';\r\n    }\r\n\r\n    modal.classList.toggle('active');\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`hero-slide__item ${props.className}`}\r\n      style={{ backgroundImage: `url(${background})` }}\r\n    >\r\n      <div className=\"hero-slide__item__content container\">\r\n        <div className=\"hero-slide__item__content__info\">\r\n            <h2 className=\"title\">{item.title}</h2>\r\n            <div className=\"overview\">{item.overview}</div>\r\n            <div className=\"btns\">\r\n                <Button onClick={() => hisrory.push('/movie/' + item.id)}>\r\n                    Watch Now\r\n                </Button>\r\n                <OutlineButton onClick={setModalActive}>\r\n                    Watch Trailer\r\n                </OutlineButton>\r\n            </div>\r\n        </div>\r\n        <div className=\"hero-slide__item__content__poster\">\r\n            <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TrailerModal = (props) =>{\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return(\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100&\" height=\"500px\" title=\"trailer\">\r\n\r\n                </iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default HeroSlide;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}